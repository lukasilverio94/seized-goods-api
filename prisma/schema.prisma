generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model SeizedGood {
  id                Int                @id @default(autoincrement())
  name              String
  description       String
  value             Float
  status            GoodStatus         @default(PENDING)
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  allocations       Allocation[]
}

model SocialOrganization {
  id                Int                @id @default(autoincrement())
  name              String
  contactPerson     String
  email             String
  phone             String
  address           String
  qualifications    String              // criteria or qualifications for receiving goods
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  allocations       Allocation[]
}

model Allocation {
  id                Int                @id @default(autoincrement())
  seizedGoodId      Int
  organizationId    Int
  allocatedAt       DateTime           @default(now())
  purpose           String              // purpose of allocation
  createdAt         DateTime           @default(now())
  
  seizedGood        SeizedGood         @relation(fields: [seizedGoodId], references: [id])
  socialOrganization SocialOrganization @relation(fields: [organizationId], references: [id])
}

model User {
  id                String                @id @default(uuid())
  username          String              @unique
  email             String              @unique
  password          String             
  role              UserRole           @default(USER) 
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  refreshToken      RefreshToken[]    
}

model RefreshToken {
  id                String                @id @default(uuid())
  hashedToken       String             
  userId            String               
  revoked           Boolean            @default(false) 
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt

  user              User               @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

enum GoodStatus {
  PENDING
  ALLOCATED
  DESTROYED
}

enum UserRole {
  ADMIN
  USER
}
